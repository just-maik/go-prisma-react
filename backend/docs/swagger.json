{
    "swagger": "2.0",
    "info": {
        "description": "API for managing calculations, formulars, and nodes",
        "title": "Calculation API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api",
    "paths": {
        "/calculations": {
            "get": {
                "description": "Get all calculations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "List calculations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CalculationModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new calculation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "Create a calculation",
                "parameters": [
                    {
                        "description": "Calculation to create",
                        "name": "calculation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCalculationInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.CalculationModel"
                        }
                    }
                }
            }
        },
        "/calculations/{id}": {
            "get": {
                "description": "Get calculation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "Get a calculation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calculation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CalculationModel"
                        }
                    },
                    "404": {
                        "description": "Calculation not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a calculation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "Update a calculation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calculation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Calculation updates",
                        "name": "calculation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCalculationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CalculationModel"
                        }
                    },
                    "404": {
                        "description": "Calculation not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a calculation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "Delete a calculation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calculation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Calculation not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/calculations/{id}/formulars": {
            "get": {
                "description": "Get all formulars in a calculation's sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "List formulars in a calculation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calculation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CalculationFormularModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a formular to a calculation's sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "Add a formular to a calculation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calculation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Formular to add",
                        "name": "formular",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddFormularInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.CalculationFormularModel"
                        }
                    }
                }
            }
        },
        "/calculations/{id}/formulars/reorder": {
            "put": {
                "description": "Update the sequence of formulars in a calculation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "Reorder formulars in a calculation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calculation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New formular order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ReorderFormularsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/calculations/{id}/formulars/{formularId}": {
            "delete": {
                "description": "Remove a formular from a calculation's sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calculations"
                ],
                "summary": "Remove a formular from a calculation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Calculation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "formularId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "CalculationFormular not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/formulars": {
            "get": {
                "description": "Get all formulars",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "List formulars",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.FormularModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new formular",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "Create a formular",
                "parameters": [
                    {
                        "description": "Formular to create",
                        "name": "formular",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateFormularInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.FormularModel"
                        }
                    }
                }
            }
        },
        "/formulars/{id}": {
            "get": {
                "description": "Get formular by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "Get a formular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.FormularModel"
                        }
                    },
                    "404": {
                        "description": "Formular not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a formular by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "Update a formular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Formular updates",
                        "name": "formular",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateFormularInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.FormularModel"
                        }
                    },
                    "404": {
                        "description": "Formular not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a formular by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "Delete a formular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Formular not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/formulars/{id}/nodes": {
            "get": {
                "description": "Get all nodes in a formular's sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "List nodes in a formular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.FormularNodeModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a node to a formular's sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "Add a node to a formular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Node to add",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddNodeInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.FormularNodeModel"
                        }
                    }
                }
            }
        },
        "/formulars/{id}/nodes/reorder": {
            "put": {
                "description": "Update the sequence of nodes in a formular",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "Reorder nodes in a formular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New node order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ReorderNodesInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/formulars/{id}/nodes/{nodeId}": {
            "delete": {
                "description": "Remove a node from a formular's sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formulars"
                ],
                "summary": "Remove a node from a formular",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Formular ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "nodeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "FormularNode not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nodes": {
            "get": {
                "description": "Get all nodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "List nodes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.NodeModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Create a node",
                "parameters": [
                    {
                        "description": "Node to create",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateNodeInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.NodeModel"
                        }
                    }
                }
            }
        },
        "/nodes/{id}": {
            "get": {
                "description": "Get node by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Get a node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NodeModel"
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a node by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Update a node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Node updates",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateNodeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NodeModel"
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a node by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nodes"
                ],
                "summary": "Delete a node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Node not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.CalculationFormularModel": {
            "type": "object",
            "properties": {
                "calculation": {
                    "$ref": "#/definitions/db.CalculationModel"
                },
                "calculationId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "formular": {
                    "$ref": "#/definitions/db.FormularModel"
                },
                "formularId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "next": {
                    "$ref": "#/definitions/db.CalculationFormularModel"
                },
                "nextId": {
                    "type": "string"
                },
                "previous": {
                    "$ref": "#/definitions/db.CalculationFormularModel"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.CalculationModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "formulars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CalculationFormularModel"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.FormularModel": {
            "type": "object",
            "properties": {
                "calculationFormulars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CalculationFormularModel"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.FormularNodeModel"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.FormularNodeModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "formular": {
                    "$ref": "#/definitions/db.FormularModel"
                },
                "formularId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "next": {
                    "$ref": "#/definitions/db.FormularNodeModel"
                },
                "nextId": {
                    "type": "string"
                },
                "node": {
                    "$ref": "#/definitions/db.NodeModel"
                },
                "nodeId": {
                    "type": "string"
                },
                "previous": {
                    "$ref": "#/definitions/db.FormularNodeModel"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.NodeModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "formularNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.FormularNodeModel"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodeData": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "handlers.AddFormularInput": {
            "type": "object",
            "properties": {
                "formularId": {
                    "description": "The ID of the formular to add",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "nextId": {
                    "description": "Optional ID of the next formular in sequence",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174001"
                }
            }
        },
        "handlers.AddNodeInput": {
            "type": "object",
            "properties": {
                "nextId": {
                    "description": "Optional ID of the next node in sequence",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174001"
                },
                "nodeId": {
                    "description": "The ID of the node to add",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "handlers.CreateCalculationInput": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the calculation",
                    "type": "string",
                    "example": "My Calculation"
                }
            }
        },
        "handlers.CreateFormularInput": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the formular",
                    "type": "string",
                    "example": "My Formular"
                }
            }
        },
        "handlers.CreateNodeInput": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the node",
                    "type": "string",
                    "example": "My Node"
                },
                "nodeData": {
                    "description": "The data associated with the node",
                    "type": "string",
                    "example": "raw data"
                }
            }
        },
        "handlers.ReorderFormularsInput": {
            "type": "object",
            "properties": {
                "formularOrder": {
                    "description": "The ordered list of formular IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['123e4567-e89b-12d3-a456-426614174000'",
                        " '123e4567-e89b-12d3-a456-426614174001']"
                    ]
                }
            }
        },
        "handlers.ReorderNodesInput": {
            "type": "object",
            "properties": {
                "nodeOrder": {
                    "description": "The ordered list of node IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['123e4567-e89b-12d3-a456-426614174000'",
                        " '123e4567-e89b-12d3-a456-426614174001']"
                    ]
                }
            }
        },
        "handlers.UpdateCalculationInput": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The new name of the calculation",
                    "type": "string",
                    "example": "Updated Calculation"
                }
            }
        },
        "handlers.UpdateFormularInput": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The new name of the formular",
                    "type": "string",
                    "example": "Updated Formular"
                }
            }
        },
        "handlers.UpdateNodeInput": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The new name of the node",
                    "type": "string",
                    "example": "Updated Node"
                },
                "nodeData": {
                    "description": "The new data for the node",
                    "type": "string",
                    "example": "updated data"
                }
            }
        }
    }
}